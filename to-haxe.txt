todo: add to haxe.txt

just a temp place to leave some notes i get from the web with my iPad
or from vim/server

the haxe cookbook is a really nice way to learn some stuff
  - https://code.haxe.org/category/principles/everything-is-an-expression.html
  
ruby0x1 (of luxe) has a few well written posts about haxe!
  - https://notes.underscorediscovery.com/haxe-from-1000ft/
    - https://notes.underscorediscovery.com/haxe-entry-point/
  - https://notes.underscorediscovery.com/haxe-compile-time-macros/

http://snowkit.github.io/linc/
  - this seems like a cool way to just use pop C++ libs, but still retain Haxe...
  
  
  
  
  
  

thoughts 'n quirks from my game dev:

if(this-is-null) throw ("this is not bool")

 // TODO: are strings set by value? yes, they are!

is3d = false; // TODO: maybe can't have field names begin with a number?

the Std (standard) package is automatically imported

package ra; // package name it not automatically implied by file-path
// without it, it will use the top-most name-space

if the module/package doesn't match the file-path
  - add "-cp path-to-modules" to hxml file

 // this.super() doesn't work, must use just super()

import ra.hp.* // doesn't work recursively...

//this = null; // TODO: FAIL, lol    

// note: classes have new instead of class name / standard constructor

// TODO: init in constuctor vs in init()
hmm, why ever seperate this?


naming:
classes at least two characters so that refactoring isn't bad, and that ctags 'n autocomplete all work okay
PunkApp extends App


std.Int() // no (Int)floatyNumber


// TODO: haxe.std not showing up in autocompletion...
